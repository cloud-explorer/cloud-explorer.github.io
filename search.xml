<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Create and Configure an Azure CDN Endpoint]]></title>
      <url>https://cloud-explorer.github.io/2016/03/01/create-and-configure-an-azure-cdn-endpoint/</url>
      <content type="html"><![CDATA[<p>In my last post we discussed the benefits of delivering your site’s content through a Content Delivery Network (CDN). Azure CDN as I had mentioned is gaining popularity. If you are in the Microsoft stack and are already using Azure, then it’s CDN offering is an excellent choice. In this post we will look at creating and configuring an Azure CDN endpoint to be used with your site.</p>
<h4 id="Creating-a-CDN-Profile"><a href="#Creating-a-CDN-Profile" class="headerlink" title="Creating a CDN Profile"></a>Creating a CDN Profile</h4><ol>
<li><p>Go to the Azure Management Portal at <a href="http://portal.azure.com" target="_blank" rel="external">http://portal.azure.com</a></p>
</li>
<li><p>On the resources blade on the left, click on “New”</p>
</li>
<li><p>On the New blade select Media + CDN, then select CDN.</p>
</li>
<li><p>On the New CDN profile blade, fill in the name of the profile. A CDN Profile is bucket which may contain one or more CDN endpoint. So choose a name that will make sense for your business</p>
<img src="/2016/03/01/create-and-configure-an-azure-cdn-endpoint/image1.jpeg" alt="Creating an Azure CDN Profile" title="Creating an Azure CDN Profile">
</li>
<li><p>Choose a location. This is the location of the data center where you profile information will be stored. This is not the POP location.</p>
</li>
<li><p>Choose an existing resource group or create a new one. Typically, a resource group is comprised of resources related to a specific application. For example, you can choose to group the web app, database and CDN for the website under the same resource group.</p>
</li>
<li><p>Choose either the Standard S1 or Premium P1 as the pricing tier. A detailed list of features for each of these tier can be found on the Azure CDN’s site <a href="https://azure.microsoft.com/en-us/services/cdn/" target="_blank" rel="external">https://azure.microsoft.com/en-us/services/cdn/</a></p>
</li>
<li><p>Select the Azure Subscription you want to create this under and press the Create button.</p>
</li>
<li><p>This will kick-off the request for the creation of the CDN profile. You will be notified when the CDN profile creation successfully completes.</p>

</li>
</ol>
<p>Now that you have a CDN profile it is time to create a CDN endpoint.</p>
<h4 id="Creating-a-CDN-Endpoint"><a href="#Creating-a-CDN-Endpoint" class="headerlink" title="Creating a CDN Endpoint."></a>Creating a CDN Endpoint.</h4><ol>
<li><p>Under the newly created CDN profile, click on the Add Endpoint button</p>

</li>
<li><p>Enter a name for the endpoint. This has to be a unique name across all Azure CDN endpoints. When created your CDN endpoint will be accessible at <a href="http://&lt;endpointname&gt;.azureedge.net/" target="_blank" rel="external">http://&lt;endpointname&gt;.azureedge.net/</a></p>
</li>
<li><p>Choose an origin type and origin hostname. Your choices are</p>
<ol>
<li><p><em>Storage</em> and then select an existing blob storage container (Container needs to be publically accessible) from your subscription</p>
</li>
<li><p><em>Cloud Service</em> and the select a website deployed on a VM or a Cloud Service (IaaS)</p>
</li>
<li><p><em>WebApp</em> and select a website deployed as PaaS, or</p>
</li>
<li><p><em>Custom Origin</em> and select custom origin URL or IP address. This can point to any publically accessible URL or IP Address.</p>
</li>
</ol>
</li>
<li><p>If the content to be retrieved is hosted under a specific directory path, specify the Origin Path. This is optional and need not be filled in if it is not applicable.</p>
</li>
<li><p>Then enter the host header the needs to be sent to the origin with each request. If there are more than one virtual domains hosted on a physical server, the hostname and IP address from the host header can used by the origin server to identify the incoming request. If you leave this blank, the request hostname determines this value.</p>
</li>
<li><p>Select the HTTP protocols you want the CDN support and their port numbers.</p>
</li>
<li><p>Click Add to kick-off the request for creation of this endpoint.</p>
</li>
<li><p>Once the endpoint is created it will appear in a list under the CDN profile blade</p>

</li>
</ol>
<h4 id="Configuring-the-Endpoint"><a href="#Configuring-the-Endpoint" class="headerlink" title="Configuring the Endpoint"></a>Configuring the Endpoint</h4><ol>
<li><p>On the CDN profile page, click on the endpoint to launch the Endpoint blade.</p>
</li>
<li><p>Click Configure</p>
</li>
<li><p>If you desire to turn to turn on compression for files, toggle the compression button to on. Optionally you can add or remove the content types to be compressed. By default, azure list all static resource content types that are generally compressed for content delivery.</p>
</li>
<li><p>Then you can select the query string caching behavior. The choices are to</p>
<ol>
<li><p>Ignore query string when caching.</p>
</li>
<li><p>To bypass caching for URLs that contain query strings.</p>
</li>
<li><p>To cache every request with a unique URL</p>
</li>
</ol>
</li>
<li><p>You can also change the protocol, the origin host header and the origin path on this blade</p>

</li>
</ol>
<div class="alert alert-warning"><i class="fa fa-bell"></i>  <br>
Please note that the endpoint will not be available for use immediately. It may take up to 90 minutes for the registration to propagate through the CDN network. If you try to access the CDN endpoint immediately, you will get a 404 – NOT FOUND response until the content becomes available on the CDN</div>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[What is a cdn and why do you need to care?]]></title>
      <url>https://cloud-explorer.github.io/2016/02/23/what-is-a-cdn-and-why-do-i-need-to-care/</url>
      <content type="html"><![CDATA[<p>The success of the websites we build is heavily influenced by its latency: the time it takes for the hosting server to receive, process, and deliver a request for a page (html, images, js, css, etc.). The latency a site visitor experiences is largely based on how far he/she is from the server and is compounded by the size and number of resources on the page. In this post we will explore the latency experienced by a website hosted in a single location, with a large international user-base experiences and how the addition of a Content Delivery Network (CDN) can drastically improve the situation. </p>
<h4 id="Scenario-1-No-CDN"><a href="#Scenario-1-No-CDN" class="headerlink" title="Scenario 1: No CDN"></a>Scenario 1: No CDN</h4><img src="/2016/02/23/what-is-a-cdn-and-why-do-i-need-to-care/image1.jpg" alt="No CDN" title="No CDN">
<ol>
<li>The user requests a resource on your website through the internet</li>
<li>The request bounces back and forth between different networks on the internet before reaching the origin server (Red lines in the diagram)</li>
<li>The origin server processes the request and its response again travels through the internet taking several hops before reaching the user’s HTTP client (Black lines in the diagram). Even for the most optimized website, this “network hop” dance negatively impacts latency by several seconds.</li>
</ol>
<p>According to <a href="http://loadstorm.com/2014/04/infographic-web-performance-impacts-conversion-rates/" target="_blank" rel="external">this</a> 2014 study by LoadStorm, <strong>25%</strong> of users will abandon a website that takes more than 4 seconds to load, <strong>75%</strong> of mobile users will quit after 5 seconds. The worst part is almost <strong>50%</strong> of the users will never return to a poorly performing website. This is the exact problem a Content Delivery Network (CDN) tries to solve by caching static resources in geographically distributed edge servers.</p>
<div class="alert alert-success"><i class="fa fa-lightbulb-o"></i>  <br>

<strong>Origin Server: </strong> As the name suggests, this is the server(s) where the customer host their content.
<br>
<strong>POP: </strong>POP stands for Point Of Presence. This is also sometime referred to as the <strong>CDN Edge Network</strong>. These are the geographical locations where CDN edge servers are located</div>
<h4 id="Scenario-2-With-CDN-First-Request-Origin-Pull"><a href="#Scenario-2-With-CDN-First-Request-Origin-Pull" class="headerlink" title="Scenario 2: With CDN - First Request (Origin Pull)"></a>Scenario 2: With CDN - First Request (Origin Pull)</h4><img src="/2016/02/23/what-is-a-cdn-and-why-do-i-need-to-care/image2.jpg" alt="First Request Scenario" title="First Request Scenario">
<ol>
<li>The user requests a resource on your website through the internet</li>
<li>The request reaches the “closest” POP location to the user (POP-U in diagram). Close here refers to network closeness and not necessarily geographical closeness.</li>
<li>Since the edge network is aware of its locations, POP-U requests the resource from the POP closest to the origin server (POP-O in diagram). This request will travel from POP-U to POP-O using the most optimal route available.</li>
<li>POP-O request the resource from the origin, caches the response and communicates it back to POP-U.</li>
<li>POP-U caches the response and communicates it back to the user</li>
</ol>
<h4 id="Scenario-3-With-CDN-Subsequent-Request"><a href="#Scenario-3-With-CDN-Subsequent-Request" class="headerlink" title="Scenario 3: With CDN - Subsequent Request"></a>Scenario 3: With CDN - Subsequent Request</h4><img src="/2016/02/23/what-is-a-cdn-and-why-do-i-need-to-care/image3.jpg" alt="Subsequent Requests Scenario" title="Subsequent Requests Scenario">
<ol>
<li>The user requests a resource on your website through the internet</li>
<li>The request reaches the “closest” POP location to the user. If a cached version of the resource is available, it is communicated back to the user. If a cached version was not found, the resource will be pulled from the origin (scenario 2).<br>With the CDN Edge Network, the number of “hops” required to pull a resource from the origin server is reduced significantly. Once the resource is cached, it is directly served from a POP that is “closest” to the requester. This dramatically improves the latency of the website.</li>
</ol>
<h4 id="Scenario-4-With-CDN-–-Request-from-a-different-POP-location"><a href="#Scenario-4-With-CDN-–-Request-from-a-different-POP-location" class="headerlink" title="Scenario 4: With CDN – Request from a different POP location"></a>Scenario 4: With CDN – Request from a different POP location</h4><img src="/2016/02/23/what-is-a-cdn-and-why-do-i-need-to-care/image4.jpg" alt="Request from a different POP location Scenario" title="Request from a different POP location Scenario">
<ol>
<li>The user requests a resource on your website through the internet</li>
<li>Just like in scenario 2 the POP closest to the user (POP-U) receives the request and forward it directly to the POP (POP-O) closest to the origin.</li>
<li>If POP-O has a cached version of the resource, it responds back <strong>without</strong> requesting it from the origin. If not, it performs an origin pull.</li>
</ol>
<p>As can be seen the introduction of a CDN allows the website to respond to unpredictable user loads in a predictable manner. Content is always pulled and cached by the POP closest to the origin. As and when user load increases, the load on the CDN edge network increases never affecting the origin server.</p>
<h4 id="Is-a-CDN-must-for-every-website"><a href="#Is-a-CDN-must-for-every-website" class="headerlink" title="Is a CDN must for every website?"></a>Is a CDN must for every website?</h4><p>It depends on the purpose and user distribution of the website. A CDN may not make much difference in the following scenarios</p>
<ol>
<li><p>If the content of the website is very dynamic with very little chance of reuse.</p>
</li>
<li><p>If the majority of the users are in a location very close to the origin server. In this case the origin may be better suited to deliver the content in the most optimal route.</p>
</li>
</ol>
<p>There are several CDN offerings available such as Akamai, Amazon CloudFront, Azure, MaxCDN, etc. Clearly Akamai and Amazon are industry leader but with some the new functionalities and capabilities announced in late 2015, Azure CDN has become a serious competitor for the big 2. Azure CDN has no upfront-costs, no termination fees and you only pay for what you use. RESTful APIs are available to manage CDN Configuration (create/update/delete) and CDN Endpoints (purge, preload, compression, querystring). In my next post we will cover commissioning, configuring an Azure CDN Endpoint to be used with your website.</p>
]]></content>
    </entry>
    
  
  
</search>
